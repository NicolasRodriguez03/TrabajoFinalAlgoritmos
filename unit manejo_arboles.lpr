unit manejo_Arboles;

interface
  USES
    manejo_archivo_cont;
  procedure leer_clave(var x:string; var clave:string);
  PROCEDURE CARGAR_ARBOL(VAR ARBOL:T_PUNT);
  PROCEDURE BUSCAR (ARBOL:T_PUNT);
  PROCEDURE CONSULTA (ARBOL:T_PUNT);
  PROCEDURE MUESTRA_DATOS (POS: T_PUNT);
  PROCEDURE INORDEN( VAR ARBOL:T_PUNT);
  FUNCTION PREORDEN( ARBOL:T_PUNT;BUSCADO:CHAR):T_PUNT;
  PROCEDURE AGREGAR_NODO (VAR ARBOL:T_PUNT);
  PROCEDURE LISTAR (ARBOL:T_PUNT);

implementation
    procedure leer_clave(var x:string; var clave:string);
    begin
    Writeln ('Va a ingresar un NOMBRE o un DNI?')
    Readln (x);
    Writeln ('Ingrese CLAVE');
    Readln (CLAVE);
    end;

PROCEDURE BUSCAR(VAR ARBOL_DNI:T_PUNT; VAR ARBOL_AYN:T_PUNT; var pos:integer);
VAR 
  AUX:T_PUNT;
begin
  POS:=-1;
  leer_clave(x,clave);
  If (x=nombre) or (x=NOMBRE) or (x=Nombre) then
    AUX:= PREORDEN(ARBOL_AYN, CLAVE);
  ELSE
    AUX:= PREORDEN(ARBOL_DNI, CLAVE);
  IF AUX<>NIL THEN
    POS:= AUX^.INFO.POS_ARCH;
  end;
end;

PROCEDURE AGREGAR_NODO (VAR ARBOL:T_PUNT);
VAR
X:CHAR;
BEGIN
CLRSCR;
WRITE ('INGRESE DATO: ');
READLN (X);
AGREGAR(ARBOL, X);
end;

PROCEDURE MUESTRA_DATOS (VAR ARCH_C:ARCHIVO_C; POS: T_PUNT);
VAR
  X:WORD;
BEGIN
X:= POS^.INFO.POS_ARCH;
MOSTRAR_DATOS_C(arch_c,x);
END;

PROCEDURE CARGAR_ARBOL(VAR ARBOL:T_PUNT);
VAR CAR,TECLA: CHAR;
BEGIN
CLRSCR;
WRITE ('INGRESA? PRESIONE N PARA SALIR: ');
READLN (TECLA);
WHILE NOT (ARBOL_LLENO (ARBOL)) AND (TECLA<> 'N') DO
BEGIN
CLRSCR;
WRITE ('INGRESA CARACTER: ');
READLN (CAR);
AGREGAR (ARBOL,CAR);
WRITE ('CONTINUA? PRESIONE N PARA SALIR: ');
READLN (TECLA);
end;
END;

PROCEDURE LISTAR (ARBOL:T_PUNT);
BEGIN
IF NOT ARBOL_VACIO (ARBOL) THEN INORDEN (ARBOL)
ELSE WRITELN ('ARBOL VACIO');
READKEY
END;

FUNCTION PREORDEN(ARBOL:T_PUNT; BUSCADO:STRING[100]):T_PUNT;
BEGIN
IF (ARBOL = NIL) THEN PREORDEN := NIL
ELSE
IF ( ARBOL^.INFO = BUSCADO) THEN
PREORDEN:= ARBOL
ELSE IF ARBOL^.INFO > BUSCADO THEN
PREORDEN := PREORDEN(ARBOL^.H_I,BUSCADO)
ELSE
PREORDEN := PREORDEN(ARBOL^.H_D,BUSCADO)
END;



FUNCTION OBTENER_N_CONT (VAR ARCH_C:ARCHIVO_C; POS: INTEGER):STRING[8];
Var dato: DATOS_CONT;
begin
LEER_DATO_C(arch_c,pos,dato);
OBTENER_N_CONT:= dato.n_cont;
end;
end.